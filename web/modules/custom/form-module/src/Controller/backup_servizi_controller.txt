<?php

namespace Drupal\ex81\Controller;

use Drupal\Core\Controller\ControllerBase;

use Drupal\taxonomy\Entity\Term;
use Drupal\node\Entity\Node;
use Drupal\user\Entity\User;

use Drupal\Core\Entity\Query;
use Drupal\Core\Entity\Query\QueryInterface;

use Drupal\Core\Datetime\DrupalDateTime;
use Drupal\media\Entity\Media;
use Drupal\file\Entity\File;

use Drupal\Core\Url;
use Drupal\Component\Utility\UrlHelper;
use Symfony\Component\HttpFoundation\RedirectResponse;
use \Symfony\Component\HttpFoundation\Response;


class ServiziController extends \Twig_Extension {

  public function getName() {
    return 'ex81.ServiziController';
  }

  public function getFunctions() {
    return array(
      new \Twig_SimpleFunction('get_macroaree', array($this, 'get_macroaree')),
      new \Twig_SimpleFunction('get_service', array($this, 'get_service')),

      new \Twig_SimpleFunction('area_competenza', array($this, 'area_competenza')),
      new \Twig_SimpleFunction('tipologia_servizio', array($this, 'tipologia_servizio')),
      new \Twig_SimpleFunction('tipologia_erogazione', array($this, 'tipologia_erogazione')),
      new \Twig_SimpleFunction('stato_richiesta', array($this, 'stato_richiesta')),
      new \Twig_SimpleFunction('tax_richiesta_collaborazione', array($this, 'tax_richiesta_collaborazione')),
      new \Twig_SimpleFunction('tax_richiesta_pubblicazione', array($this, 'tax_richiesta_pubblicazione')),

      new \Twig_SimpleFunction('json_decode_arr', array($this, 'json_decode_arr')),

      new \Twig_SimpleFunction('get_richieste_servizi_cliente', array($this, 'get_richieste_servizi_cliente')),
      new \Twig_SimpleFunction('get_elenco_richieste_gestite', array($this, 'get_elenco_richieste_gestite')),
      new \Twig_SimpleFunction('get_elenco_richieste_gestite_personalizzate_stakeholder', array($this, 'get_elenco_richieste_gestite_personalizzate_stakeholder')),

      new \Twig_SimpleFunction('get_elenco_richieste_personalizzate', array($this, 'get_elenco_richieste_personalizzate')),
      new \Twig_SimpleFunction('get_elenco_richieste_personalizzate_all', array($this, 'get_elenco_richieste_personalizzate_all')),



    );
  }

  public function get_macroaree(){
    $vid = 'macroaree';
    $terms =\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
    foreach ($terms as $term) {

      $alias = \Drupal::service('path.alias_manager')->getAliasByPath('/portalelavoro_new/web/node/'.$term->tid);
      $macroarea = Term::load($term->tid);

      $term_data[] = array(
        'id' => $term->tid,
        'titolo_cerchio' => $macroarea->get('field_testo_cerchio_homepage')->getValue()[0]['value'],
        'bottone' => $macroarea->get('field_testo_bottone_homepage')->getValue()[0]['value'],
        'alias' =>$alias
      );
    }
    return $term_data;
  }

  public function area_competenza(){
    $vid = 'a';
    $terms =\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
    foreach ($terms as $term) {

      $alias = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'.$term->tid);
      $macroarea = Term::load($term->tid);

      $term_data[] = array(
        'tid' => $term->tid,
        'name' => $term->name,
      );
    }
    return $term_data;
  }

  public function tipologia_servizio(){
    $vid = 'tipo_di_servizio';
    $terms =\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
    foreach ($terms as $term) {

      $alias = \Drupal::service('path.alias_manager')->getAliasByPath('/portalelavoro_new/web/node/'.$term->tid);
      $macroarea = Term::load($term->tid);

      $term_data[] = array(
        'tid' => $term->tid,
        'name' => $term->name,
      );
    }
    return $term_data;
  }

  public function tipologia_erogazione(){
    $vid = 'tipologie_erogazione';
    $terms =\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
    foreach ($terms as $term) {

      $alias = \Drupal::service('path.alias_manager')->getAliasByPath('/portalelavoro_new/web/node/'.$term->tid);
      $macroarea = Term::load($term->tid);

      $term_data[] = array(
        'tid' => $term->tid,
        'name' => $term->name,
      );
    }
    return $term_data;
  }

  public function stato_richiesta(){
    $vid = 'stato_richiesta';
    $terms =\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
    foreach ($terms as $term) {

      $alias = \Drupal::service('path.alias_manager')->getAliasByPath('/portalelavoro_new/web/node/'.$term->tid);
      $macroarea = Term::load($term->tid);

      $term_data[] = array(
        'tid' => $term->tid,
        'name' => $term->name,
      );
    }
    return $term_data;
  }

  public function tax_richiesta_collaborazione(){
    $vid = 'richiesta_personalizzata_motivaz';
    $terms =\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
    foreach ($terms as $term) {

      $alias = \Drupal::service('path.alias_manager')->getAliasByPath('/portalelavoro_new/web/node/'.$term->tid);
      $macroarea = Term::load($term->tid);

      $term_data[] = array(
        'tid' => $term->tid,
        'name' => $term->name,
      );
    }
    return $term_data;
  }

  public function tax_richiesta_pubblicazione(){
    $vid = 'richiesta_pubblicabile_sul_sito';
    $terms =\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
    foreach ($terms as $term) {

      $alias = \Drupal::service('path.alias_manager')->getAliasByPath('/portalelavoro_new/web/node/'.$term->tid);
      $macroarea = Term::load($term->tid);

      $term_data[] = array(
        'tid' => $term->tid,
        'name' => $term->name,
      );
    }
    return $term_data;
  }


  public function get_service(){

    $query = \Drupal::entityQuery('node')
    ->condition('type', 'servizio')
    ->condition('status', 1);

    if(isset($_GET['area_competenza']) && $_GET['area_competenza'] != 'null') $query->condition('field_area_di_competenza', $_GET['area_competenza']);

    if(isset($_GET['tipologia_servizio']) && $_GET['tipologia_servizio'] != 'null') $query->condition('field_tipo_servizio', $_GET['tipologia_servizio']);
    if(isset($_GET['tipologia_erogazione']) && $_GET['tipologia_erogazione'] != 'null') $query->condition('field_tipologia_di_erogazione', $_GET['tipologia_erogazione']);
    if(isset($_GET['fornitore']) && $_GET['fornitore'] != 'null') $query->condition('field_stakeholder', $_GET['fornitore']);
    $servizio = $query->execute();
    if(isset($_GET['macroarea']) && $_GET['macroarea'] != 'null') $query->condition('field_macroarea', $_GET['macroarea']);
    $servizio = $query->execute();

    if(count($servizio)>0){

      foreach ($servizio as $value) {

        $node = Node::load($value);
        $alias = \Drupal::service('path.alias_manager')->getAliasByPath('/node/'.$value);
        $azienda = Node::load($node->get('field_stakeholder')->getValue()[0]['target_id']);

        if(!empty($node->get('field_tipo_servizio')->getValue()[0]['target_id'])){
          $tipo = Term::load($node->get('field_tipo_servizio')->getValue()[0]['target_id']);
          $nome_tipo = $tipo->get('name')->getValue()[0]['value'];
        }else{
          $nome_tipo = '';
        }

        if(!empty($node->get('field_area_di_competenza')->getValue()[0]['target_id'])){
          $area = Term::load($node->get('field_area_di_competenza')->getValue()[0]['target_id']);
          $nome_area = $area->get('name')->getValue()[0]['value'];
        }else{
          $nome_area = '';
        }
        if(!empty($node->get('field_tipologia_di_erogazione')->getValue()[0]['target_id'])){
          $erogazione = Term::load($node->get('field_area_di_competenza')->getValue()[0]['target_id']);
          $nome_erogazione = $erogazione->get('name')->getValue()[0]['value'];
        }else{
          $nome_erogazione = '';
        }

        $servizio_lista[]=array(
          'nid' => $value,
          'alias' => $alias,
          'title' => $node->get('title')->getValue()[0]['value'],
          'nome_azienda' =>$azienda->get('title')->getValue()[0]['value'],
          'tipo_servizio' => $nome_tipo,
          'area' => $nome_area,
          'erogazione' => $nome_erogazione,

        );
      }

    }else{
      $servizio_lista = [];
    }

    if(isset($_GET['macroarea']) && $_GET['macroarea'] != 'null' or
    isset($_GET['fornitore']) && $_GET['fornitore'] != 'null' or
    isset($_GET['tipologia_erogazione']) && $_GET['tipologia_erogazione'] != 'null' or
    isset($_GET['tipologia_servizio']) && $_GET['tipologia_servizio'] != 'null' or
    isset($_GET['area_competenza']) && $_GET['area_competenza'] != 'null') {
      $build = array(
        '#type' => 'markup',
        '#markup' => json_encode($servizio_lista),
      );

      return new Response(render($build));
    }else{
      return json_encode($servizio_lista);
    }

    //return json_encode($servizio_lista);
  }

  public function confronta_servizi($nid_service){
    $servizi = json_decode($nid_service);


    //foreach ($servizi as $value) {
    for($x=0;$x<count($servizi);$x++){

      $node = Node::load($servizi[$x]);

      $azienda = Node::load($node->get('field_stakeholder')->getValue()[0]['target_id']);

      if(!empty($node->get('field_tipo_servizio')->getValue()[0]['target_id'])){
        $tipo = Term::load($node->get('field_tipo_servizio')->getValue()[0]['target_id']);
        $nome_tipo = $tipo->get('name')->getValue()[0]['value'];
      }else{
        $nome_tipo = '';
      }

      if(!empty($node->get('field_area_di_competenza')->getValue()[0]['target_id'])){
        $area = Term::load($node->get('field_area_di_competenza')->getValue()[0]['target_id']);
        $nome_area = $area->get('name')->getValue()[0]['value'];
      }else{
        $nome_area = '';
      }
      if(!empty($node->get('field_tipologia_di_erogazione')->getValue()[0]['target_id'])){
        $erogazione = Term::load($node->get('field_tipologia_di_erogazione')->getValue()[0]['target_id']);
        $nome_erogazione = $erogazione->get('name')->getValue()[0]['value'];
      }else{
        $nome_erogazione = '';
      }

      $servizi_arr[]=array(
        'nid' => $servizi[$x],
        'title' => $node->get('title')->getValue()[0]['value'],
        'body' => $node->get('body')->getValue()[0]['value'],
        'nome_azienda' =>$azienda->get('title')->getValue()[0]['value'],
        'tipo_servizio' => $nome_tipo,
        'area' => $nome_area,
        'erogazione' => $nome_erogazione,

      );
    }


    $url_page = '/node/11?confronta_servizi='.json_encode($servizi_arr);

    return new RedirectResponse(URL::fromUserInput($url_page)->toString());

  }

  public function invia_richiesta_servizi($nid_service){

    $user = User::load(\Drupal::currentUser()->id());
    $email_user = $user->get('mail')->getValue()[0]['value'];

    $azienda = Node::load($user->get('field_azienda')->getValue()[0]['target_id']);
    $service = json_decode($nid_service);
    //print_r($service);
    for($y = 0; $y < count($service); $y++){

      $servizio = Node::load($service[$y][0]);
      $azienda_proprietaria_servizio = $servizio->get('field_stakeholder')->getValue()[0]['target_id'];

      $stakeholder = Node::load($servizio->get('field_stakeholder')->getValue()[0]['target_id']);
      if(!empty($stakeholder->get('field_email_contatto_riferimento')->getValue()[0]['value'])){
        $email_stakeholder = $stakeholder->get('field_email_contatto_riferimento')->getValue()[0]['value'];
      }else{
        $email_stakeholder = '';
      }

      if($service[$y][1] != ''){
        $motivazione = $service[$y][1];
      }else{
        $motivazione = '';
      }

      $node_new = Node::create([
        'type'        => 'richesta',
        'title'       => 'Richiesta - '.$azienda->get('title')->getValue()[0]['value'],
        'field_servizio' => $service[$y][0],
        'field_utente' => $user->get('field_azienda')->getValue()[0]['target_id'],
        'field_azienda_proprietaria' =>$azienda_proprietaria_servizio,
        'field_stato' => 196,
        'field_motivazione' => $motivazione,
        'status' => 1
      ]);
      $node_new->save();
      $new_nid = $node_new->id();

      NotificationController::nuova_richiesta_cliente($email_user, $service[$y][0]);
      if( $email_stakeholder != ''){
        NotificationController::nuova_richiesta_stakeholder($email_stakeholder, $service[$y][0]);
      }

    }

    $url_page = '/node/30';

    return new RedirectResponse(URL::fromUserInput($url_page)->toString());
  }

  public function get_richieste_servizi_cliente(){

    $user = User::load(\Drupal::currentUser()->id());

    $query = \Drupal::entityQuery('node')
    ->condition('type', 'richesta')
    ->condition('field_utente', $user->get('field_azienda')->getvalue()[0]['target_id'])
    ->condition('status', 1);
    $richieste = $query->execute();

    if(count($richieste)>0){
      foreach($richieste as $value){
        $richiesta = Node::load($value);
        if(!empty($richiesta->get('field_servizio')->getValue()[0]['target_id'])){
          if(!empty($richiesta->get('field_stato')->getValue()[0]['target_id'])){
            $stato_richiesta = Term::load($richiesta->get('field_stato')->getValue()[0]['target_id']);
            $nome_stato = $stato_richiesta->get('name')->getValue()[0]['value'];
          }else{
            $stato_richiesta = '';
          }


          $data_invio_richiesta = date('d/m/Y', $richiesta->get('created')->getValue()[0]['value']);


          $servizio = Node::load($richiesta->get('field_servizio')->getValue()[0]['target_id']);

          $nome_servizio = $servizio->get('title')->getValue()[0]['value'];

          if(!empty($servizio->get('field_macroarea')->getValue()[0]['target_id'])){
            $tid_macroarea = Term::load($servizio->get('field_macroarea')->getValue()[0]['target_id']);
            $nome_macroarea = $tid_macroarea->get('name')->getValue()[0]['value'];
          }else{
            $id_macroarea ='';
            $nome_macroarea = '';
          }

          if(!empty($servizio->get('field_area_di_competenza')->getValue()[0]['target_id'])){
            $tid_area_competenza = Term::load($servizio->get('field_area_di_competenza')->getValue()[0]['target_id']);
            $nome_area_competenza = $tid_area_competenza->get('name')->getValue()[0]['value'];
          }else{
            $tid_area_competenza ='';
            $nome_area_competenza = '';
          }

          $stakeholder = Node::load($servizio->get('field_stakeholder')->getValue()[0]['target_id']);
          $nome_stakeholder = $stakeholder->get('field_ragione_sociale_')->getValue()[0]['value'];

          $elenco_richieste[]=array(
            'id_richiesta' => $value,
            'nid_servizio' => $richiesta->get('field_servizio')->getValue()[0]['target_id'],
            'title_servizio' => $nome_servizio,
            'nid_stakeholder' =>$servizio->get('field_stakeholder')->getValue()[0]['target_id'],
            'nome_stakeholder' => $nome_stakeholder,
            'tid_macroarea' =>$tid_macroarea,
            'nome_macroarea' =>$nome_macroarea,
            'tid_area_comptenza' => $tid_area_competenza,
            'area_competenza' => $nome_area_competenza,
            'data_invio' => $data_invio_richiesta,
            'stato_richiesta' => $nome_stato
          );
        }
      }
    }else{
      $elenco_richieste = [];
    }

    return $elenco_richieste;
  }

  public function get_elenco_richieste_personalizzate(){
    $user = User::load(\Drupal::currentUser()->id());

    $query = \Drupal::entityQuery('node')
    ->condition('type', 'richesta')
    ->condition('field_utente', $user->get('field_azienda')->getvalue()[0]['target_id'])
    ->condition('status', 1);
    $richieste = $query->execute();

    if(count($richieste)>0){
      foreach($richieste as $value){
        $richiesta = Node::load($value);

        if(!empty($richiesta->get('field_stato')->getValue()[0]['target_id'])){
          $stato_richiesta = Term::load($richiesta->get('field_stato')->getValue()[0]['target_id']);
          $nome_stato = $stato_richiesta->get('name')->getValue()[0]['value'];
        }else{
          $stato_richiesta = '';
        }

        $data_invio_richiesta = date('d/m/Y', $richiesta->get('created')->getValue()[0]['value']);
        $motivazione = $richiesta->get('field_motivazione')->getValue()[0]['value'];


        $elenco_richieste[]=array(
          'id_richiesta' => $value,
          'data_invio' => $data_invio_richiesta,
          'stato_richiesta' => $nome_stato,
          'motivazione'=>$motivazione
        );

      }
    }else{
      $elenco_richieste = [];
    }

    return $elenco_richieste;
  }

  public function get_elenco_richieste_personalizzate_all(){

    $query = \Drupal::entityQuery('node')
    ->condition('type', 'richesta')
    ->notExists('field_servizio')
    ->condition('status', 1);
    $richieste = $query->execute();

    if(count($richieste)>0){
      foreach($richieste as $value){
        $richiesta = Node::load($value);

        if(!empty($richiesta->get('field_stato')->getValue()[0]['target_id'])){
          $stato_richiesta = Term::load($richiesta->get('field_stato')->getValue()[0]['target_id']);
          $nome_stato = $stato_richiesta->get('name')->getValue()[0]['value'];
        }else{
          $stato_richiesta = '';
        }

        $data_invio_richiesta = date('d/m/Y', $richiesta->get('created')->getValue()[0]['value']);
        $motivazione = $richiesta->get('field_motivazione')->getValue()[0]['value'];
        $azienda_richiedente = Node::load($richiesta->get('field_utente')->getValue()[0]['target_id']);
        if(!empty($azienda_richiedente->get('field_email_contatto_riferimento')->getValue()[0]['value'])){
          $email_azienda = $azienda_richiedente->get('field_email_contatto_riferimento')->getValue()[0]['value'];
        }else{
          $email_azienda = '';
        }

        if(!empty($richiesta->get('field_pubblicazione_personalizza')->getValue()[0]['target_id'])){
          $pubb_richiesta = Term::load($richiesta->get('field_pubblicazione_personalizza')->getValue()[0]['target_id']);
          $nome_pubb_richiesta = $pubb_richiesta->get('name')->getValue()[0]['value'];
        }else{
          $nome_pubb_richiesta = '';
        }

        if(!empty($richiesta->get('field_motivazione_richiesta_pers')->getValue()[0]['target_id'])){
          $motivazione_tax = Term::load($richiesta->get('field_motivazione_richiesta_pers')->getValue()[0]['target_id']);
          $nome_motivazione_tax = $motivazione_tax->get('name')->getValue()[0]['value'];
        }else{
          $nome_motivazione_tax = '';
        }


        $elenco_richieste[]=array(
          'id_richiesta' => $value,
          'data_invio' => $data_invio_richiesta,
          'stato_richiesta' => $nome_stato,
          'motivazione'=>$motivazione,
          'nome_azienda' => $azienda_richiedente->get('title')->getValue()[0]['value'],
          'email_azienda' => $email_azienda,
          'pubblicazione_richiesta' => $nome_pubb_richiesta,
          'motivazione_richiesta_tax' => $nome_motivazione_tax,
          'status' => $richiesta->get('status')->getValue()[0]['value']
        );

      }
    }else{
      $elenco_richieste = [];
    }

    return $elenco_richieste;
  }

  public function json_decode_arr($array){
    return json_decode($array);
  }

  public function get_elenco_richieste_gestite(){

    $user = User::load(\Drupal::currentUser()->id());
    //$azienda_servizio = $user->get('field_azienda')->getValue()[0]['target_id'];
    $query = \Drupal::entityQuery('node')
    ->condition('type', 'richesta')
    ->condition('field_azienda_proprietaria', $user->get('field_azienda')->getValue()[0]['target_id'])
    ->condition('status', 1);
    $richieste = $query->execute();

    if(count($richieste)>0){
      foreach($richieste as $value){

        $richiesta = Node::load($value);

        if(!empty($richiesta->get('field_stato')->getValue()[0]['target_id'])){
          $stato_richiesta = Term::load($richiesta->get('field_stato')->getValue()[0]['target_id']);
          $nome_stato = $stato_richiesta->get('name')->getValue()[0]['value'];
          $id_stato = $richiesta->get('field_stato')->getValue()[0]['target_id'];
        }else{
          $stato_richiesta = '';
          $id_stato='';
        }


        $data_invio_richiesta = date('d/m/Y', $richiesta->get('created')->getValue()[0]['value']);
        if(!empty($richiesta->get('field_servizio')->getValue()[0]['target_id'])){

          $servizio = Node::load($richiesta->get('field_servizio')->getValue()[0]['target_id']);
          $nome_servizio = $servizio->get('title')->getValue()[0]['value'];

          if(!empty($servizio->get('field_macroarea')->getValue()[0]['target_id'])){
            $tid_macroarea = Term::load($servizio->get('field_macroarea')->getValue()[0]['target_id']);
            $nome_macroarea = $tid_macroarea->get('name')->getValue()[0]['value'];
          }else{
            $id_macroarea ='';
            $nome_macroarea = '';
          }

          if(!empty($servizio->get('field_area_di_competenza')->getValue()[0]['target_id'])){
            $tid_area_competenza = Term::load($servizio->get('field_area_di_competenza')->getValue()[0]['target_id']);
            $nome_area_competenza = $tid_area_competenza->get('name')->getValue()[0]['value'];
          }else{
            $tid_area_competenza ='';
            $nome_area_competenza = '';
          }

          $stakeholder = Node::load($servizio->get('field_stakeholder')->getValue()[0]['target_id']);
          $nome_stakeholder = $stakeholder->get('field_ragione_sociale_')->getValue()[0]['value'];

          $elenco_richieste[]=array(
            'id_richiesta' => $value,
            'nid_servizio' => $richiesta->get('field_servizio')->getValue()[0]['target_id'],
            'title_servizio' => $nome_servizio,
            'nid_stakeholder' =>$servizio->get('field_stakeholder')->getValue()[0]['target_id'],
            'nome_stakeholder' => $nome_stakeholder,
            'tid_macroarea' =>$tid_macroarea,
            'nome_macroarea' =>$nome_macroarea,
            'tid_area_comptenza' => $tid_area_competenza,
            'area_competenza' => $nome_area_competenza,
            'data_invio' => $data_invio_richiesta,
            'stato_richiesta' => $stato_richiesta,
            'id_stato' => $id_stato,
            'numero_commenti' => count($richiesta->get('field_commento_richiesta'))
          );
        }/*else{
          $elenco_richieste[]=array(
            'id_richiesta' => $value,
            'nid_servizio' => $richiesta->get('field_servizio')->getValue()[0]['target_id'],
            'title_servizio' => '',
            'nid_stakeholder' =>'',
            'nome_stakeholder' => '',
            'tid_macroarea' =>'',
            'nome_macroarea' =>'',
            'tid_area_comptenza' => '',
            'area_competenza' => '',
            'data_invio' => $data_invio_richiesta,
            'stato_richiesta' => $stato_richiesta,
            'id_stato' => $id_stato,
            'numero_commenti' => count($richiesta->get('field_commento_richiesta'))
          );
        }*/
      }
    }else{

      $elenco_richieste = [];
    }

    return $elenco_richieste;
  }

  public function get_elenco_richieste_gestite_personalizzate_stakeholder(){

    $user = User::load(\Drupal::currentUser()->id());
    //$azienda_servizio = $user->get('field_azienda')->getValue()[0]['target_id'];
    $query = \Drupal::entityQuery('node')
    ->condition('type', 'richesta')
    ->condition('field_azienda_proprietaria', $user->get('field_azienda')->getValue()[0]['target_id'])
    ->notExists('field_servizio')
    ->condition('status', 1);
    $richieste = $query->execute();

    if(count($richieste)>0){
      foreach($richieste as $value){

        $richiesta = Node::load($value);

        if(!empty($richiesta->get('field_stato')->getValue()[0]['target_id'])){
          $stato_richiesta = Term::load($richiesta->get('field_stato')->getValue()[0]['target_id']);
          $nome_stato = $stato_richiesta->get('name')->getValue()[0]['value'];
          $id_stato = $richiesta->get('field_stato')->getValue()[0]['target_id'];
        }else{
          $stato_richiesta = '';
          $id_stato='';
        }

        $user_richiesta = Node::load($richiesta->get('field_utente')->getValue()[0]['target_id']);
        if(!empty($user_richiesta->get('field_email_contatto_riferimento')->getValue()[0]['value'])){
          $email_azienda = $user_richiesta->get('field_email_contatto_riferimento')->getValue()[0]['value'];
        }else{
          $email_azienda= '';
        }

        $data_invio_richiesta = date('d/m/Y', $richiesta->get('created')->getValue()[0]['value']);

          $elenco_richieste[]=array(
            'id_richiesta' => $value,
            'email_azienda' => $email_azienda,
            'data_invio' => $data_invio_richiesta,
            'stato_richiesta' => $stato_richiesta,
            'nome_stato' => $nome_stato,
            'id_stato' => $id_stato,
            'numero_commenti' => count($richiesta->get('field_commento_richiesta'))
          );

      }
    }else{
      $elenco_richieste = [];
    }

    return $elenco_richieste;
  }

  public function update_stato_richiesta($id_richiesta, $id_stato){

    $richesta = Node::load($id_richiesta);
    $richesta->set('field_stato', $id_stato);
    $richesta->save();

    $azienda_cliente = Node::load($richesta->get('field_utente')->getValue()[0]['target_id']);
    if(!empty($azienda_cliente->get('field_email_contatto_riferimento')->getValue()[0])){
      $email_azienda = $azienda_cliente->get('field_email_contatto_riferimento')->getValue()[0]['value'];
    }else{
      $email_azienda = '';
    }

    $stato = Term::load($id_stato);
    $nome_stato = $stato->get('name')->getValue()[0]['value'];

    if($email_azienda != ''){
      NotificationController::cambio_stato_richiesta($email_azienda, $nome_stato, $id_richiesta);
    }

    $build = array(
      '#type' => 'markup',
      '#markup' => 'true',
    );
    return new Response(render($build));
  }

  public function nuova_richiesta($testo_nuova_richeista,$pubblicabile, $motivazione_select){
    $uid = \Drupal::currentUser()->id();
    $user = User::load($uid);

    $azienda = $user->get('field_azienda')->getValue()[0]['target_id'];

    if($pubblicabile == 201){
      $status = 1;
    }else{
      $status = 0;
    }

    $node = Node::create([
      'type' => 'richesta',
      'title' => 'Richiesta personalizzata-'.$azienda,
      'field_motivazione' => $testo_nuova_richeista,
      'field_stato' => 196,
      'field_utente' => $azienda,
      'field_motivazione_richiesta_pers' =>$motivazione_select ,
      'field_pubblicazione_personalizza' =>$pubblicabile,
      'status' => $status
    ]);
    $node->save();

    $url_page = '/user';

    return new RedirectResponse(URL::fromUserInput($url_page)->toString());
  }

  public function conferma_pubblicazione($id_richiesta){
    $node=Node::load($id_richiesta);
    $node->set('status', 1);
    $node->save();

    $url_page = '/node/72';

    return new RedirectResponse(URL::fromUserInput($url_page)->toString());
  }

}
